{
  "compilerOptions": {
    "target": "es5", // ECMAScript 타겟 버전을 지정합니다: "ES5"는 모든 브라우저에서 널리 지원됩니다.
    "lib": ["dom", "dom.iterable", "esnext"], // DOM, DOM Iterable API, 최신 ECMAScript 사양의 기능에 대한 타입 정의를 포함합니다.
    "allowJs": true, // JavaScript 파일의 컴파일을 허용합니다.
    "skipLibCheck": true, // 선언 파일(*.d.ts)의 타입 검사를 건너뜁니다.
    "esModuleInterop": true, // CommonJS와 ES 모듈 간의 상호 운용성을 활성화합니다.
    "allowSyntheticDefaultImports": true, // 기본 내보내기가 없는 모듈에서 기본 가져오기를 허용합니다.
    "strict": true, // 모든 엄격한 타입 검사 옵션을 활성화합니다.
    "forceConsistentCasingInFileNames": true, // 동일한 파일에 대한 일관성 없는 대소문자 참조를 금지합니다.
    "noFallthroughCasesInSwitch": true, // switch문에서 fallthrough 경우에 대해 오류를 보고합니다.
    "module": "esnext", // 모듈 코드 생성을 지정합니다: "esnext"는 최신 버전의 ECMAScript 모듈 구문을 대상으로 합니다.
    "moduleResolution": "node", // 모듈이 어떻게 해석되는지 결정합니다. "node"는 Node.js 스타일 해석을 위해 사용됩니다.
    "resolveJsonModule": true, // .json 파일을 가져올 수 있습니다.
    "isolatedModules": true, // 다른 가져오기에 의존하지 않고 각 파일을 안전하게 변환할 수 있음을 보장합니다.
    "noEmit": true, // 출력을 내보내지 않습니다 (예: .ts 파일에서 .js 파일을 생성하지 않음).
    "jsx": "react-jsx", // .tsx 파일에서 JSX를 지원합니다
    "baseUrl": "src" // 상대적이지 않은 모듈 이름을 해석하는 기본 디렉토리입니다.
  },
  "include": ["src", "jest.setup.js"],
  "typeRoots": ["./types"]
}
